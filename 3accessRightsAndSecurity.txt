Операционные системы и виртуализация (Linux) (семинары)
Урок 3. Права доступа и безопасность
Задание:

Создать два произвольных файла. 
Первому присвоить права на чтение и запись для владельца и группы, 
только на чтение — для всех. 
Второму присвоить права на чтение и запись только для владельца. 
Сделать это в численном и символьном виде.
Назначить новых владельца и группу для директории целиком.

Управление пользователями:
* создать пользователя, используя утилиту useradd и adduser;
* удалить пользователя, используя утилиту userdel.
Управление группами:
* создать группу с использованием утилит groupadd и addgroup;
* попрактиковаться в смене групп у пользователей;
* добавить пользователя в группу, не меняя основной;
Создать пользователя с правами суперпользователя. 
Сделать так, чтобы sudo не требовал пароль для выполнения команд.

Дополнительные (необязательные) задания:
* Используя дополнительные материалы, 
выдать одному из созданных пользователей право на выполнение ряда команд, 
требующих прав суперпользователя (команды выбираем на своё усмотрение).
* Создать группу developer и нескольких пользователей, входящих в неё. 
Создать директорию для совместной работы. 
Сделать так, чтобы созданные одними пользователями файлы могли изменять другие пользователи этой группы.
* Создать в директории для совместной работы поддиректорию для обмена файлами, 
но чтобы удалять файлы могли только их создатели.
* Создать директорию, в которой есть несколько файлов. 
Сделать так, чтобы открыть файлы можно было, только зная имя файла, 
а через ls список файлов посмотреть было нельзя.

Результат:
Текст команд, которые применялись при выполнении задания. 
Присылаем в формате текстового документа: задание и команды для решения (без вывода). 
Формат - PDF (один файл на все задания).

Загрузите домашнее задание на проверку до 18 февр., 17:00 +03:00 UTC

touch testfile                //Создать файл testfile
touch testfile2               //Создать файл testfile2

chmod u=rw,g=rw,o=r testfile  //testfile присвоить права на чтение и запись 
                              //для владельца и группы(В символьном виде), 
                              //только на чтение — для всех
 
chmod u=rw,g=,o= testfile2    //testfile2 присвоить права на чтение и запись 
                              //только для владельца(В символьном виде)

chmod 664 testfile            //testfile присвоить права на чтение и запись 
                              //для владельца и группы(В численном виде), 
                              //только на чтение — для всех
 
chmod 600 testfile2           //testfile2 присвоить права на чтение и запись 
                              //только для владельца(В численном виде)


//Назначить новых владельца и группу для директории целиком.
                                             
sudo chown -R testuser:testuser ~/Видео/petrv


СМЕНИТЬ ВЛАДЕЛЬЦА ПАПКИ В ГРАФИЧЕСКОМ ИНТЕРФЕЙСЕ:

Можно изменить владельца папки с помощью файлового менеджера, например в Nautilus. 
Но для этого надо запустить файловый менеджер от имени суперпользователя. 
Пишем в терминале команду:

sudo nautilus

Затем найти нужную папку, и кликнуть по ней ПКМ. 
В открывшемся контекстном меню выбрать пункт 
Свойства:
В появившемся окне перейти на вкладку 
Права. 
Здесь можно изменить владельца папки и группу владельца 
с помощью выпадающего списка напротив соответствующего пункта:
Если нужно чтобы эти изменения были применены 
для всех вложенных папок и файлов, 
нажать внизу окна кнопку 
Изменить права на вложенные файлы...

СМЕНИТЬ ВЛАДЕЛЬЦА ПАПКИ В ТЕРМИНАЛЕ:

Для того чтобы сменить владельца папки следует использовать утилиту chown. 
Например, 
чтобы сменить владельца папки ~/Видео/petrv/ на testuser
пишем команду:

sudo chown testuser ~/Видео/petrv
ls -l ~/Видео/

В данном случае группа осталась без изменений, 
чтобы изменить также группу-владельца 
пишем команду:

sudo chown testuser:testuser ~/Видео/petrv
ls -l ~/Видео/

ЕСЛИ НУЖНО СМЕНИТЬ ВЛАДЕЛЬЦА ПАПКИ РЕКУРСИВНО:
нужно использовать опцию -R:

sudo chown -R testuser:testuser ~/Видео/petrv

Вся информация о пользователях находится в файле /etc/passwd. 
Для того чтобы создать пользователя linux 
существуют специальные утилиты. 
Одна из таких утилит, это useradd.

Команда useradd:

Команда useradd позволяет 
зарегистрировать нового пользователя 
или изменить информацию об уже имеющемся. 
Во время создания можно создать 
домашний каталог пользователя 
и скопировать в него системные файлы. 

Основные опции команды, с помощью которых нужно настраивать нового пользователя:

-b - базовый каталог для размещения домашнего каталога пользователя, по умолчанию /home;
-c - комментарий к учетной записи;
-d - домашний каталог, в котором будут размещаться файлы пользователя;
-e - дата, когда учетная запись пользователя будет заблокирована, в формате ГГГГ-ММ-ДД;
-f - заблокировать учетную запись сразу после создания;
-g - основная группа пользователя;
-G - список дополнительных групп;
-k - каталог с шаблонами конфигурационных файлов;
-l - не сохранять информацию о входах пользователя в lastlog и faillog;
-m - создавать домашний каталог пользователя, если он не существует;
-M - не создавать домашнюю папку;
-N - не создавать группу с именем пользователя;
-o - разрешить создание пользователя linux с неуникальным идентификатором UID;
-p - задать пароль пользователя;
-r - создать системного пользователя, не имеет оболочки входа, 
без домашней директории и с идентификатором до SYS_UID_MAX;
-s - командная оболочка для пользователя;
-u - идентификатор для пользователя;
-D - отобразить параметры, которые используются по умолчанию для создания пользователя. 
Если вместе с этой опцией задать еще какой-либо параметр, 
то его значение по умолчанию будет переопределено.

           //* создать пользователя, используя утилиту useradd;
                                                
sudo useradd test   //Создался простой пользователь- 
                    //без оболочки и пароля, а также без групп.

sudo useradd -p password -s /bin/bash -m -d /home/test1 test1
  
//Создался пользователь с паролем и оболочкой /bin/bash, 
d - это домашний каталог, в котором будут размещаться файлы пользователя;  
 
adduser test2          //* создать пользователя, 
                       //используя утилиту adduser

userdel test2          //* удалить пользователя, 
                       //используя утилиту userdel


groupadd testgr        //* создать группу testgr
                       //с использованием утилиты groupadd  
 
addgroup testgr2       //* создать группу testgr2
                       //с использованием утилиты addgroup

//* попрактиковаться в смене групп у пользователей:

Все доступные опции с исходным описанием 
для утилиты usermod 
можно просмотреть в терминале, 
выполнив команду:

man usermod

-a, --append – добавить пользователя в одну или несколько дополнительных групп. 
Опция будет работать только вместе с опцией -G.
-b, --badnames – разрешить использование имен, которые не соответствуют стандартам.
-d, --home – указать новое местоположение домашнего каталога пользователя. 
При использовании опции -m содержимое текущего домашнего каталога будет перемещено на новое место.
-e, --expiredate – указать дату, при наступлении которой учетная запись будет отключена. 
Дата вводится в формате ГГГГ-ММ-ДД. Если использовать эту опцию без указания даты, 
то отключение пользователя будет отменено.
-f, --inactive – установить количество дней для блокировки пользователя, 
которое должно пройти после устаревания пароля. 
При значении -1 опция блокировки отключается, а при значении 0 блокировка случится сразу же после устаревания.
-g, --gid – выбрать новую основную группу для пользователя и для файлов в его домашнем каталоге. 
Нужно задать имя или номер новой группы.
-G, --groups – указать список дополнительных групп, в которые должен входить пользователь. 
Между собой группы разделяются запятой. Если пользователь входит в дополнительную группу, 
которая не была указана в списке, то он будет из нее удалён. 
Но при использовании опции -a можно добавлять новые дополнительные группы, не удаляя старые.
-l, --login – изменить имя пользователя на новое. Данная опция не затрагивает никакие другие данные. 
А значит, название домашнего каталога и почты придется изменять вручную, 
чтобы они совпадали с новым именем пользователя.
-L, --lock – заблокировать пароль пользователя. Эта опция помещает символ ! (восклицательный знак) 
перед паролем в зашифрованном виде, отключая его. Данную опцию нельзя использовать с -p и -U.
-m, --move-home – изменить местоположение домашнего каталога пользователя. 
Опция будет работать только вместе с -d. Утилита попытается обновить права собственности на файлы 
и скопировать режимы, ACL и расширенные атрибуты.
-o, --non-unique – разрешить заменить идентификационный номер пользователя на не уникальное значение. 
Работает в паре с опцией -u.
-p, --password – изменить пароль в зашифрованном виде.
-R, --root – выполнить chroot в указанный каталог 
и использовать его вместо корневого каталога / с хранящимися в нем конфигурационными файлами.
-s, --shell – указать новую командную оболочку shell для пользователя. 
При использовании опции -s с пустым значением будет выбрана оболочка по умолчанию.
-u, --uid – изменить параметр UID (числовой идентификатор пользователя). 
Данные изменения автоматически применятся к почтовому ящику и содержимому домашнего каталога. 
Для остальных файлов UID придется изменять вручную.
-U, --unlock – разблокировать пароль пользователя. 
Данная опция убирает символ ! (восклицательный знак) перед паролем в зашифрованном виде, 
разрешая использовать его для входа. Не сработает с -p и -L.
  
sudo usermod -g testgr test_user  //изменил основную группу 
                                  //для пользователя test_user на testgr
                                  //Эта команда сотрет предыдущий параметр 

Затем можно проверить что изменения применились с помощью команды id. 
В результатах вывода команды id посмотреть пункт GID. 

Еще вместо названия группы 
можно использовать ее идентификатор GID (1001 в моем случае):

sudo usermod -g 1001 test_user   //изменил основную группу 
                                 //для пользователя test_user на testgr
                                 //Эта команда сотрет предыдущий параметр  
  
                   //* добавить пользователя в группу, не меняя основной;
 
sudo usermod -a -G testgr2 test_user //Пользователя test_user 
                                     //добавил в группу testgr2
                                    //не удаляя основную группу
 (-G нужно использовать вместе с -a, чтобы добавить новую группу, не удаляя старые)



sudo visudo                          //Создал пользователя test_user2 
test_user2 ALL=(ALL) NOPASSWD: ALL   //с правами суперпользователя.         
                                     //Сделать так, чтобы sudo 
                                     //не требовал пароль 
                                     //для выполнения команд. 
Для того чтобы разрешить пользователю выполнять 
только некоторые команды без пароля(например apt и reboot)
надо добавить следующую строчку:

petrv ALL=(ALL) NOPASSWD: /usr/bin/apt, /sbin/reboot

Чтобы отключить пароль для группы пользователей 
нужно использовать следующий код:

%testgr2 ALL=(ALL) NOPASSWD: ALL

Теперь у пользователей группы testgr2 
утилита sudo не будет спрашивать пароль, 
а у всех остальных будет.